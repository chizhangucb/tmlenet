% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/tmlenet.R
\name{eval.summaries}
\alias{eval.summaries}
\title{Evaluate Summary Measures sA and sW}
\usage{
eval.summaries(data, Kmax, sW, sA, IDnode = NULL, NETIDnode = NULL,
  sep = " ", NETIDmat = NULL, verbose = getOption("tmlenet.verbose"))
}
\arguments{
\item{data}{Same as \code{link{tmlenet}} input argument.}

\item{Kmax}{Same as \code{link{tmlenet}} input argument.}

\item{sW}{Same as \code{link{tmlenet}} input argument.}

\item{sA}{Same as \code{link{tmlenet}} input argument.}

\item{IDnode}{(Optional) Same as \code{link{tmlenet}} input argument.}

\item{NETIDnode}{(Optional) Same as \code{link{tmlenet}} input argument.}

\item{sep}{(Optional) Same as \code{link{tmlenet}} input argument.}

\item{NETIDmat}{(Optional) Same as \code{link{tmlenet}} input argument.}

\item{verbose}{(Optional) Same as \code{link{tmlenet}} input argument.}
}
\value{
A list with: R6 object of class \code{Define_sVar} which must be passed as argument to \code{\link{tmlenet}}.
}
\description{
Take input data, create a network and evaluate the summary measures previously defined by calling functions \code{def.sW} and \code{def.sA}.
 This function is called internally by \code{tmlenet}.
 The resulting output R6 class object \code{DatNet.ObsP0} returned by this function can also be manually supplied to \code{tmlenet} function to
 to expedite the estimation time.
 When \code{DatNet.ObsP0} is provided to \code{tmlenet} function, there is no need to specifying the same input arguments to \code{tmlenet}.
}
\examples{
#***************************************************************************************
# EXAMPLES OF SUMMARY MEASURES
#***************************************************************************************

# Defined with R expressions, s.a., 
# W2[[0]] just means W2; W2[[1:Kmax]] means vectors of (W2_netF_j), j=1, ..., Kmax; 
# sum(W2[[1:Kmax]]) is netW2_sum
def_sW <- def.sW(netW2 = W2[[1:Kmax]]) +
            def.sW(netW3_sum = rowSums(W3[[1:Kmax]]), replaceMisVal0 = TRUE)
def_sA <- def.sA(sum_1mAW2_nets = rowSums((1-A[[1:Kmax]]) * W2[[1:Kmax]]),
            replaceMisVal0 = TRUE) +
            def.sA(netA = A[[0:Kmax]])

# MORE EXAMPLES of various summary measures:
def_sW <- def.sW(netW1 = W1[[0:Kmax]], noname = TRUE) +
          def.sW(netW2 = W2[[1:Kmax]], noname = TRUE) +
          def.sW(netW3 = W3[[1:Kmax]], noname = TRUE) +
          def.sW(netW3_sum = rowSums(W3[[1:Kmax]]), replaceMisVal0 = TRUE)

def_sW <- def.sW(netW2 = W2[[1:Kmax]], netW3_sum = rowSums(W3[[1:Kmax]]), noname= TRUE,
                  replaceMisVal0 = TRUE)
def_sW <- def.sW(netW2 = W2[[1:Kmax]], netW3_sum = rowSums(W3[[1:Kmax]]),
                  replaceMisVal0 = FALSE, noname = TRUE)

def_sW <- def.sW(W1 = W1[[0]], W1 = W2[[0:Kmax]], W1 = W3[[0:Kmax]],
                  netW1_sum = rowSums(W1[[1:Kmax]]),
                  netW2_sum = rowSums(W2[[1:Kmax]]),
                  netW3_sum = rowSums(W3[[1:Kmax]]))

#***************************************************************************************
# Example. 3 equivalent ways to define summary measures:
#***************************************************************************************
def_sW <- def.sW(W1 = W1[[0]], W2 = W2[[0]], W3 = W3[[0]])
def_sW <- def.sW(W1 = W1, W2 = W2, W3 = W3) # vs 2
def_sW <- def.sW(W1 = "W1[[0]]", W2 = "W2[[0]]", W3 = "W3[[0]]") # vs 3

#***************************************************************************************
# Example. See contents of the Define_sVar object
#***************************************************************************************
def_sW$sVar.exprs
def_sW$sVar.expr.names
def_sW$ReplMisVal0
def_sW$sVar.misXreplace
def_sW$sVar.noname

#***************************************************************************************
# Example. More summary measures for sA
#***************************************************************************************
def_sA <- def.sA(netA = A[[0:Kmax]], noname = TRUE)
def_sA <- def.sA(netA = "A[[0:Kmax]]",
                sum_1mAW2_nets = rowSums((1-A[[1:Kmax]]) * W2[[1:Kmax]]))

#***************************************************************************************
# Example. More summary measures for sW and sA
#***************************************************************************************
def_sW <- def.sW(netW2 = W2[[1:Kmax]], noname = TRUE) +
          def.sW(netW3_sum = rowSums(W3[[1:Kmax]]), replaceMisVal0 = TRUE)
            
def_sA <- def.sA(sum_1mAW2_nets = rowSums((1-A[[1:Kmax]]) * W2[[1:Kmax]]),
            replaceMisVal0 = TRUE) +
          def.sA(netA = A[[0:Kmax]], noname = TRUE)

#***************************************************************************************
# Example.  NOT WRITTEN YET. Will evaluate the summary measures applied to the 
# (O)bserved data (data.frame):
# res <- eval.summaries(summaries = def_sA, Odata = df_K6, Kmax = kmax, 
# NETIDnode = "Net_str", IDnode = "IDs")
#***************************************************************************************
}
\seealso{
\code{\link{tmlenet}} for estimation of network effects and \code{\link{def.sW}} for defining the summary measures.
}

